//- variables (Pug):
  //- form: name of the current form in the Angular model; default: 'form'.

//- variables (Angular):
  //- form: FormGroup, name customizable, see Pug variables.
  //- tr: object containing translated messages
  //- toKv: pipe to convert objects to arrays
  //- app.trackByProp: trackBy method
  //- viewCtrl: ViewController used to dismiss modals

//- functions:
- const templVar = (name) => ({ [`#${name}`]: Boolean(name) });
- const opts = (name, attrs) => Object.assign({ formControlName: name, '[ngModelOptions]': name ? false : "{standalone: true}", [`#${name}`]: Boolean(name) }, attrs);

//- mixins:

mixin cancel
  ion-buttons( start )
    button( ion-button (click)='viewCtrl.dismiss()' )
      span( color='primary' showWhen='ios' )
        | {{ tr.CANCEL }}
      ion-icon( name='md-close' hideWhen='ios' )

mixin head(label, top=false)
  ion-header&attributes(attributes)
    ion-navbar
      - if top
        button(ion-button ion-only tappable menuToggle)
          ion-icon(name='menu')
      ion-title= `{{ tr.${label} }}`
      block
      - if !top
        +cancel

mixin errors(ctrl)
  div(*ngFor="let kv of tr.messages.FORM_ERRORS | toKv; trackBy: app.trackByProp('k')")
    //- `ctrl.touched` doesn't work for the full form
    p(color='danger' *ngIf=`${ctrl}?.dirty && ${ctrl}.hasError(kv.k)`)
      | {{kv.v}}

mixin inp(label, name=false, float=true)
  ion-item
    ion-label(floating=float)=`{{ tr.${label} }}`
    block
  if name
    +errors(`${form||'form'}.get("${name}")`)

mixin select(label, kvObj, name=false)
  +inp(label, name, false)
    ion-select([okText]='tr.alerts.ok' [cancelText]='tr.alerts.cancel')&attributes(opts(name, attributes))
      ion-option(*ngFor=`let kv of ${kvObj} | toKv` [value]='kv.k')
        | {{kv.v}}

mixin checkbox(label, name=false)
  +inp(label, name, false)
    ion-checkbox()&attributes(opts(name, attributes))

mixin input(label, name=false)
  //- ion-label(color="primary")
  +inp(label, name, false)
    ion-input(type=attributes.type||'text')&attributes(opts(name, attributes))

mixin datetime(label, name=false)
  +inp(label, name, false)
    ion-datetime([displayFormat]='tr.DISPLAYFORMAT' [pickerFormat]='tr.PICKERFORMAT')&attributes(opts(name, attributes))
